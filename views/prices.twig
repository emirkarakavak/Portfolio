<!doctype html>
<html lang="tr">
<head>
  <meta charset="utf-8">
  <title>E-Pin Fiyatları — Karşılaştırma</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body{ background:#0f172a; }
    .card{ border:none; }
    .price{ font-variant-numeric: tabular-nums; }
    .nav-tabs,.nav-pills{ flex-wrap:wrap; }
    .nav-tabs .nav-link,.nav-pills .nav-link{ margin-bottom:.5rem; }
    .product-row{ cursor:pointer; }
    .product-row:hover{ background:rgba(255,255,255,.04); }
    .best-pill{ font-size:.75rem; }
    .diff-pos{ color:#16a34a; }  /* Dijipin daha ucuz */
    .diff-neg{ color:#dc2626; }  /* Rakip daha ucuz */
    .diff-eq { color:#9ca3af; }  /* Eşit */
  </style>
</head>
<body class="text-light">
<div class="container py-4">
  <div class="row justify-content-center">
    <div class="col-12 col-xl-11">
      <div class="card shadow-lg">
        <div class="card-body p-0">

          <!-- Başlık -->
          <div class="p-4 border-bottom bg-dark text-white rounded-top">
            <h1 class="h4 mb-1">Ürün Fiyatları — Karşılaştırma</h1>
            <p class="mb-0 text-white-50">Kategori seç; tek tabloda Dijipin ile tüm rakipleri kıyasla.</p>
          </div>

          <!-- KATEGORİ SEKMESİ + FİLTRELER -->
          <div class="px-3 pt-3 pb-2 bg-dark-subtle">
            <div class="d-flex flex-wrap gap-2 align-items-center">
              <ul class="nav nav-pills mb-0" id="categoryTabs" role="tablist">
                {% for cat in categories %}
                <li class="nav-item">
                  <button class="btn btn-outline-danger me-2 {{ loop.first ? 'active' : '' }}"
                          id="{{ cat.id }}-tab"
                          data-bs-toggle="tab"
                          data-bs-target="#{{ cat.id }}"
                          type="button" role="tab">
                    {{ cat.label }}
                  </button>
                </li>
                {% endfor %}
              </ul>

              <div class="ms-auto d-flex gap-2 flex-wrap">
                <input id="globalSearch" type="search" class="form-control form-control-sm" placeholder="Ürün ara… (örn: 60 UC)">
                <select id="whoCheaper" class="form-select form-select-sm" style="min-width:190px">
                  <option value="">Tümü</option>
                  <option value="dijipin">Sadece Dijipin daha ucuz</option>
                  <option value="competitor">Sadece Rakip daha ucuz</option>
                  <option value="equal">Fiyatlar eşit</option>
                </select>
                <div class="input-group input-group-sm" style="width:200px">
                  <span class="input-group-text">Min fark %</span>
                  <input id="minDiff" type="number" step="0.01" min="0" class="form-control" placeholder="örn 5">
                </div>
              </div>
            </div>
          </div>

          <!-- İÇERİK -->
          <div class="tab-content" id="categoryTabsContent">
            {% for cat in categories %}
            <div class="tab-pane fade {{ loop.first ? 'show active' : '' }}"
                 id="{{ cat.id }}" role="tabpanel" aria-labelledby="{{ cat.id }}-tab">

              <div class="table-responsive bg-body-tertiary">
                <table class="table table-hover table-borderless align-middle mb-0">
                  <thead class="table-dark">
                  <tr id="{{ cat.id }}-head">
                    <!-- JS dinamik doldurur -->
                    <th style="width:32%">Ürün</th>
                    <th class="text-end">Dijipin (₺)</th>
                    <!-- Rakip kolonları buraya eklenecek -->
                    <th class="text-end">Fark (%)</th>
                    <th class="text-end">Etiket</th>
                  </tr>
                  </thead>
                  <tbody id="{{ cat.id }}-body">
                    <tr><td colspan="4" class="text-center text-muted">Veri hazırlanıyor…</td></tr>
                  </tbody>
                </table>
              </div>

            </div>
            {% endfor %}
          </div>

          <div class="p-3 bg-dark text-white-50 rounded-bottom">
            <small>Fark % = (min rakip − Dijipin) / min rakip × 100 • Pozitifse Dijipin daha ucuz</small>
          </div>

        </div>
      </div>
    </div>
  </div>
</div>

<!-- JSON verisi: ESCAPE ETME, RAW BAS -->
<script id="cat-data" type="application/json">{{ categoriesJson|raw }}</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
/* ---------- helpers ---------- */
const norm = s => (s||'').toString().normalize('NFD').replace(/[\u0300-\u036f]/g,'').toLowerCase().trim();
function toNumberTRorUS(p) {
  let s = String(p ?? '').replace(/[^\d.,-]/g, '').trim();
  if (!s) return null;

  // Son ayıracı bul (virgül veya nokta)
  const lastComma = s.lastIndexOf(',');
  const lastDot   = s.lastIndexOf('.');
  const lastSep   = Math.max(lastComma, lastDot);
  if (lastSep === -1) {
    const v = Number(s);
    return Number.isFinite(v) ? v : null;
  }

  const decDigits = s.length - lastSep - 1;

  if (decDigits === 2) {
    // Son ayıraç ondalık demek. Tüm rakamları topla, son iki haneyi ondalık yap.
    const digits = s.replace(/[^\d]/g, '');
    if (digits.length < 3) {
      const v = Number(digits);
      return Number.isFinite(v) ? v : null;
    }
    const intPart = digits.slice(0, -2);
    const frac    = digits.slice(-2);
    const v = Number(intPart + '.' + frac);
    return Number.isFinite(v) ? v : null;
  } else {
    // Son ayıraç ondalık değil → tüm ayıraçlar binlik. Hepsini kaldır, tam sayı olarak al.
    const digits = s.replace(/[^\d]/g, '');
    const v = Number(digits);
    return Number.isFinite(v) ? v : null;
  }
}
function fmt(n){ return n==null ? '-' : new Intl.NumberFormat('tr-TR',{minimumFractionDigits:2,maximumFractionDigits:2}).format(n); }

/* ---------- render ---------- */
document.addEventListener('DOMContentLoaded', () => {
  let cats = [];
  try { cats = JSON.parse(document.getElementById('cat-data').textContent || '[]'); }
  catch(e){ console.error('categoriesJson parse hata:', e); return; }

  // Kategori sekmeleri zaten Twig'den geliyor, biz sadece tabloları dolduracağız
  cats.forEach(cat => renderCategory(cat));

  // filtreler
  const searchInput=document.getElementById('globalSearch');
  const whoSel=document.getElementById('whoCheaper');
  const minDiff=document.getElementById('minDiff');

  function applyFilters(){
    const q=norm(searchInput.value);
    const who=whoSel.value; // '', 'dijipin', 'competitor', 'equal'
    const minp=parseFloat(minDiff.value);
    const activePane=document.querySelector('.tab-pane.show.active');
    if(!activePane) return;
    const tbody=activePane.querySelector('tbody');
    const rows=tbody.querySelectorAll('tr.product-row');
    rows.forEach(tr=>{
      const name=norm(tr.dataset.name);
      const cheaper=tr.dataset.cheaper||'';
      const diff=parseFloat(tr.dataset.diff||'NaN');
      let show=true;
      if(q && !name.includes(q)) show=false;
      if(who && cheaper!==who) show=false;
      if(!Number.isNaN(minp) && !(diff>=minp)) show=false;
      tr.style.display=show?'':'none';
    });
    // Kayıt yok satırı
    const visible=Array.from(rows).some(tr=>tr.style.display!=='none');
    let empty=tbody.querySelector('tr.__empty');
    if(!visible){
      if(!empty){ empty=document.createElement('tr'); empty.className='__empty';
        empty.innerHTML='<td colspan="'+(activePane.querySelectorAll('thead th').length)+'" class="text-center text-muted">Kayıt yok</td>';
        tbody.appendChild(empty);
      }
    } else if(empty) empty.remove();
  }
  searchInput.addEventListener('input', applyFilters);
  whoSel.addEventListener('change', applyFilters);
  minDiff.addEventListener('input', applyFilters);
  document.querySelectorAll('#categoryTabs [data-bs-toggle="tab"]').forEach(btn=>{
    btn.addEventListener('shown.bs.tab', applyFilters);
  });
  applyFilters();
});

/* ---------- tek kategori render ---------- */
function renderCategory(cat){
  const pane = document.getElementById(cat.id);
  if(!pane){ console.warn('pane yok:', cat.id); return; }

  const sites = cat.sites || [];
  const dijipin = sites.find(s => /dijipin/i.test(s.id) || /dijipin/i.test(s.label));
  const competitors = sites.filter(s => s !== dijipin); // SINIRSIZ

  // thead'i dinamik kur
  const theadRow = pane.querySelector('thead tr');
  theadRow.innerHTML = `
    <th style="width:32%">Ürün</th>
    <th class="text-end">Dijipin (₺)</th>
  `;
  for(const comp of competitors){
    const th=document.createElement('th');
    th.className='text-end';
    th.textContent=(comp.label || 'Rakip') + ' (₺)';
    theadRow.appendChild(th);
  }
  theadRow.insertAdjacentHTML('beforeend', `
    <th class="text-end">Fark (%)</th>
    <th class="text-end">Etiket</th>
  `);

  // ürün haritası: { name, dijipin, comps: Map(siteId -> {label,val}) }
  const map = new Map();

  function upsertRow(siteObj, which){
    (siteObj?.rows || []).forEach(r=>{
      const key = r.name; if(!key) return;
      const priceStr = r.tr ?? r.global ?? r.price ?? null;
      const val = toNumberTRorUS(priceStr);
      if(val==null) return;

      const rec = map.get(key) || { name:key, dijipin:null, comps:new Map() };
      if(which==='dijipin') rec.dijipin = val;
      else rec.comps.set(siteObj.id, { label: siteObj.label, val });
      map.set(key, rec);
    });
  }
  if(dijipin) upsertRow(dijipin, 'dijipin');
  for(const comp of competitors) upsertRow(comp, 'comp');

  // satırları yaz
  const tbody = pane.querySelector('tbody');
  tbody.innerHTML='';
  const rows = Array.from(map.values()).sort((a,b)=> a.name.localeCompare(b.name,'tr'));

  for(const r of rows){
    const allPairs = [];
    if(r.dijipin!=null) allPairs.push(['__dijipin__', r.dijipin]);
    for(const [sid,obj] of r.comps) allPairs.push([sid, obj.val]);
    if(!allPairs.length) continue;

    const minVal = Math.min(...allPairs.map(p=>p[1]));
    const bestKeys = new Set(allPairs.filter(p=>p[1]===minVal).map(p=>p[0]));

    // fark% = (minCompetitor − dijipin)/minCompetitor*100  (rakip varsa)
    const compVals = Array.from(r.comps.values()).map(x=>x.val);
    let diffPct=null, cheaper='equal';
    if(compVals.length && r.dijipin!=null){
      const minComp=Math.min(...compVals);
      diffPct=((minComp - r.dijipin)/minComp)*100;
      cheaper=(Math.abs(diffPct)<0.0001)?'equal':(diffPct>0?'dijipin':'competitor');
    } else if(r.dijipin!=null){ cheaper='dijipin'; }
      else { cheaper='competitor'; }

    const tr=document.createElement('tr');
    tr.className='product-row';
    tr.dataset.name=r.name;
    tr.dataset.cheaper=cheaper;
    tr.dataset.diff=(diffPct==null?'':diffPct.toFixed(2));

    // Ürün
    const tdName=document.createElement('td'); tdName.textContent=r.name; tr.appendChild(tdName);

    // Dijipin
    const tdD=document.createElement('td'); tdD.className='text-end price';
    tdD.textContent=(r.dijipin==null?'-':fmt(r.dijipin));
    if(bestKeys.has('__dijipin__')) tdD.insertAdjacentHTML('beforeend',' <span class="badge bg-success-subtle text-success border border-success-subtle ms-2 best-pill">En Uygun</span>');
    tr.appendChild(tdD);

    // Rakipler
    for(const comp of competitors){
      const cell=document.createElement('td'); cell.className='text-end price';
      const v=r.comps.get(comp.id)?.val;
      cell.textContent=(v==null?'-':fmt(v));
      if(bestKeys.has(comp.id)) cell.insertAdjacentHTML('beforeend',' <span class="badge bg-success-subtle text-success border border-success-subtle ms-2 best-pill">En Uygun</span>');
      tr.appendChild(cell);
    }

    // Fark %
    const tdDiff=document.createElement('td'); tdDiff.className='text-end';
    if(diffPct==null || !isFinite(diffPct)) tdDiff.innerHTML='<span class="text-muted">-</span>';
    else {
      const cls=diffPct>0?'diff-pos':(diffPct<0?'diff-neg':'diff-eq');
      const sign=diffPct>0?'+':'';
      tdDiff.innerHTML=`<span class="${cls}">${sign}${Number(diffPct).toFixed(2)}%</span>`;
    }
    tr.appendChild(tdDiff);

    // Etiket
    const tdTag=document.createElement('td'); tdTag.className='text-end';
    let who;
    if(bestKeys.has('__dijipin__')) who='Dijipin';
    else {
      const firstBest=[...bestKeys][0];
      who = competitors.find(c=>c.id===firstBest)?.label || 'Rakip';
    }
    tdTag.innerHTML = `<span class="badge ${bestKeys.has('__dijipin__') ? 'bg-success' : 'bg-primary'}">${who} en uygun</span>`;
    tr.appendChild(tdTag);

    tbody.appendChild(tr);
  }

  // Boşsa "kayıt yok"
  if(!tbody.children.length){
    const cols = pane.querySelectorAll('thead th').length;
    const tr=document.createElement('tr'); tr.className='__empty';
    tr.innerHTML = `<td colspan="${cols}" class="text-center text-muted">Kayıt yok</td>`;
    tbody.appendChild(tr);
  }
}
</script>
</body>
</html>